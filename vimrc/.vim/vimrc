set nocompatible
set ttyfast
set showmode
set showcmd
set title
set number
set hidden
set noerrorbells
set mouse=a
set nohlsearch
set nofoldenable

syntax enable
"filetype plugin indent on

" this is what files look like
set ffs=unix,dos,mac

" Update find path to search subdirectories
set path=$PWD/**

" No backups
set nobackup
set nowritebackup
set nowb
set noswapfile

" Keep a lot of history for undo
set undolevels=1000

" Files to ignore
" Python
set wildignore+=*.pyc,*.pyo,*/__pycache__/*
" Archives
set wildignore+=*.zip,*.tar

" Colors
set background=dark
"colorscheme anderson

" Tabs
set expandtab
set tabstop=4
set shiftwidth=4

autocmd Filetype bash setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype fish setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype fish compiler fish
autocmd Filetype fish setlocal textwidth=79
autocmd Filetype fish setlocal foldmethod=expr
autocmd Filetype make setlocal noexpandtab

" Plugins
map <F2> :NERDTreeToggle<CR>
let NERDTreeShowHidden=1
let g:airline#extensions#tabline#enabled = 1

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'dag/vim-fish'
" Bundle 'vim-airline/vim-airline'
" Bundle 'vim-airline/vim-airline-themes'
" Dev tools
Bundle 'tpope/vim-commentary'
Bundle 'neovim/nvim-lspconfig'
Bundle 'hrsh7th/cmp-nvim-lsp'
Bundle 'hrsh7th/cmp-buffer'
Bundle 'hrsh7th/cmp-path'
Bundle 'hrsh7th/cmp-cmdline'
Bundle 'hrsh7th/nvim-cmp'
Bundle 'hrsh7th/cmp-vsnip'
Bundle 'hrsh7th/vim-vsnip'
Bundle 'dense-analysis/ale'
" editor tools
Bundle 'nvim-lua/plenary.nvim'
Bundle 'nvim-telescope/telescope.nvim'
Bundle 'nvim-treesitter/nvim-treesitter'
Bundle 'kyazdani42/nvim-tree.lua'
Bundle 'editorconfig/editorconfig-vim'
Bundle 'tanvirtin/vgit.nvim'
" Status line at bottom
Bundle 'nvim-lualine/lualine.nvim'
" Tab Bar for File
Bundle 'romgrk/barbar.nvim'
Bundle 'kyazdani42/nvim-web-devicons'


filetype plugin indent on


" Find files using Telescope command-line sugar
:let mapleader = " "
noremap <leader>ff <cmd>Telescope find_files<cr>
noremap <leader>fg <cmd>Telescope live_grep<cr>
noremap <leader>fb <cmd>Telescope buffers<cr>
noremap <leader>fh <cmd>Telescope help_tags<cr>

"" configure barbar
let bufferline = get(g:, "bufferline", {})
let bufferline.auto_hide = v:false
let bufferline.clickable = v:true

"" configure lualine
source ~/.vim/evil_lualine.vim

"" configure lsp
lua << END
require'lspconfig'.pyright.setup{}
END

"" configure Ale
let g:ale_linters = {
\   'python': ['pylint'],
\}
let g:ale_fixers = {
\   'python': ['black'],
\}
let g:ale_enabled = 0

"" configure cmp
set completeopt=menu,menuone,noselect
source ~/.vim/cmp_setup.vim

"" configure commentary
nmap <C-_> gcc
vmap <C-_> gcc

"" configure vgit
lua << EOF
require('vgit').setup()
vim.o.updatetime = 300
vim.o.incsearch = false
vim.wo.signcolumn = 'yes'
EOF
