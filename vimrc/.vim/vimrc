set nocompatible
set ttyfast
set showmode
set showcmd
set title
set number
set hidden
set noerrorbells
set mouse=a
set nohlsearch
set nofoldenable

syntax enable
"filetype plugin indent on

" this is what files look like
set ffs=unix,dos,mac

" Update find path to search subdirectories
set path=$PWD/**

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
set signcolumn=yes

" No backups
set nobackup
set nowritebackup
set nowb
set noswapfile

" Keep a lot of history for undo
set undolevels=1000

" Files to ignore
" Python
set wildignore+=*.pyc,*.pyo,*/__pycache__/*
" Archives
set wildignore+=*.zip,*.tar

" Tabs
set expandtab
set tabstop=4
set shiftwidth=4

autocmd Filetype bash setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype fish setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype fish compiler fish
autocmd Filetype fish setlocal textwidth=79
autocmd Filetype fish setlocal foldmethod=expr
autocmd Filetype make setlocal noexpandtab

" Plugins
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'dag/vim-fish'
" Plugin 'vim-airline/vim-airline'
" Plugin 'vim-airline/vim-airline-themes'
" Color schemes
Plugin 'joshdick/onedark.vim'
" Dev tools
Plugin 'tpope/vim-commentary'
Plugin 'neovim/nvim-lspconfig'
" Plugin 'neoclide/coc.nvim', {'pinned': 1}
" Plugin 'hrsh7th/cmp-nvim-lsp'
" Plugin 'hrsh7th/cmp-buffer'
" Plugin 'hrsh7th/cmp-path'
" Plugin 'hrsh7th/cmp-cmdline'
" Plugin 'hrsh7th/nvim-cmp'
" Plugin 'hrsh7th/cmp-vsnip'
Plugin 'hrsh7th/vim-vsnip'
Plugin 'dense-analysis/ale'
Plugin 'davidhalter/jedi-vim'
Plugin 'ahmedkhalf/project.nvim'
" editor tools
Plugin 'nvim-lua/plenary.nvim'
Plugin 'nvim-telescope/telescope.nvim'
Plugin 'nvim-treesitter/nvim-treesitter'
Plugin 'kyazdani42/nvim-tree.lua'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'tanvirtin/vgit.nvim'
Plugin 'preservim/tagbar'
Plugin 'TimUntersberger/neogit'
Plugin 'sidebar-nvim/sidebar.nvim'
" Plugin 'tpope/vim-fugutive'
" Status line at bottom
Plugin 'nvim-lualine/lualine.nvim'
" Tab Bar for File
" Plugin 'romgrk/barbar.nvim'
Plugin 'kyazdani42/nvim-web-devicons'

call vundle#end()
filetype plugin indent on

" Color
"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif

" set background=dark
colorscheme onedark

" Find files using Telescope command-line sugar
lua << EOF
require('telescope').load_extension('projects')
EOF

"" configure barbar
" let bufferline = get(g:, "bufferline", {})
" let bufferline.auto_hide = v:false
" let bufferline.clickable = v:true

"" configure coc
" source ~/.vim/coc_config.vim

"" configure side bar
source ~/.vim/sidebar_config.vim

"" configure lualine
source ~/.vim/evil_lualine.vim

"" configure jedi-vim
let g:jedi#show_call_signatures = "2"
let g:jedi#use_splits_not_buffers = "bottom"

"" configure lsp
" lua << END
" -- require'lspconfig'.jedi_language_server.setup{} --python
" require'lspconfig'.pyright.setup{} --python
" require'lspconfig'.ccls.setup{} --c/c++
" require'lspconfig'.fortls.setup{} --fortran
" require'lspconfig'.rls.setup{} --rust
" require'lspconfig'.bashls.setup{} --rust
" require'lspconfig'.marksman.setup{} --markdown
" END

"" configure Ale
let g:ale_linters = {
\   'python': ['pylint'],
\}
let g:ale_fixers = {
\   'python': ['black'],
\}
let g:ale_enabled = 1

"" configure cmp
" set completeopt=menu,menuone,noselect
" source ~/.vim/cmp_setup.vim

"" configure vgit
lua << EOF
require('vgit').setup()
vim.o.updatetime = 300
vim.o.incsearch = false
vim.wo.signcolumn = 'yes'
EOF

"" configure neogit
lua << EOF
local neogit = require('neogit')
neogit.setup {}
EOF


"" configure nvim-tree
source ~/.vim/nvim-tree.vim 

"" configure project.nvim
source ~/.vim/project_config.vim

"" configure treesitter
source ~/.vim/treesitter_config.vim

"" Load Keybindings
source ~/.vim/keybindings.vim
